import { PrismaService } from '../../prisma/prisma.service';
import { CreateBoletoDto } from './dto/create-boleto.dto';
export declare class BoletosService {
    private readonly prisma;
    constructor(prisma: PrismaService);
    gerarBoleto(createBoletoDto: CreateBoletoDto): Promise<import("@prisma/client/runtime").GetResult<{
        id: number;
        clienteId: number;
        clienteNome: string;
        contratoId: number;
        valor: import("@prisma/client/runtime").Decimal;
        dataVencimento: Date;
        numeroParcela: number;
        descricao: string;
        nossoNumero: string;
        linhaDigitavel: string;
        codigoBarras: string;
        pdfUrl: string;
        dataGeracao: Date;
        status: string;
        dataPagamento: Date;
        valorPago: import("@prisma/client/runtime").Decimal;
        formaPagamento: string;
        dataCancelamento: Date;
        comprovante: string;
    }, unknown, never> & {}>;
    findAll(query: any): Promise<({
        cliente: {
            id: number;
            nome: string;
            cpfCnpj: string;
        };
        contrato: {
            id: number;
            valorTotal: import("@prisma/client/runtime").Decimal;
            numeroParcelas: number;
        };
    } & import("@prisma/client/runtime").GetResult<{
        id: number;
        clienteId: number;
        clienteNome: string;
        contratoId: number;
        valor: import("@prisma/client/runtime").Decimal;
        dataVencimento: Date;
        numeroParcela: number;
        descricao: string;
        nossoNumero: string;
        linhaDigitavel: string;
        codigoBarras: string;
        pdfUrl: string;
        dataGeracao: Date;
        status: string;
        dataPagamento: Date;
        valorPago: import("@prisma/client/runtime").Decimal;
        formaPagamento: string;
        dataCancelamento: Date;
        comprovante: string;
    }, unknown, never> & {})[]>;
    findOne(id: number): Promise<{
        cliente: import("@prisma/client/runtime").GetResult<{
            id: number;
            nome: string;
            cpfCnpj: string;
            dataNascimento: Date;
            dataCadastro: Date;
        }, unknown, never> & {};
        contrato: import("@prisma/client/runtime").GetResult<{
            id: number;
            clienteId: number;
            loteId: number;
            dataInicio: Date;
            dataFim: Date;
            valorTotal: import("@prisma/client/runtime").Decimal;
            valorEntrada: import("@prisma/client/runtime").Decimal;
            numeroParcelas: number;
            dataVencimento: number;
            clausulas: string;
            status: string;
            dataCriacao: Date;
            parcelasPagas: number;
            ultimoReajuste: import(".prisma/client").Prisma.JsonValue;
        }, unknown, never> & {};
    } & import("@prisma/client/runtime").GetResult<{
        id: number;
        clienteId: number;
        clienteNome: string;
        contratoId: number;
        valor: import("@prisma/client/runtime").Decimal;
        dataVencimento: Date;
        numeroParcela: number;
        descricao: string;
        nossoNumero: string;
        linhaDigitavel: string;
        codigoBarras: string;
        pdfUrl: string;
        dataGeracao: Date;
        status: string;
        dataPagamento: Date;
        valorPago: import("@prisma/client/runtime").Decimal;
        formaPagamento: string;
        dataCancelamento: Date;
        comprovante: string;
    }, unknown, never> & {}>;
    cancel(id: number): Promise<import("@prisma/client/runtime").GetResult<{
        id: number;
        clienteId: number;
        clienteNome: string;
        contratoId: number;
        valor: import("@prisma/client/runtime").Decimal;
        dataVencimento: Date;
        numeroParcela: number;
        descricao: string;
        nossoNumero: string;
        linhaDigitavel: string;
        codigoBarras: string;
        pdfUrl: string;
        dataGeracao: Date;
        status: string;
        dataPagamento: Date;
        valorPago: import("@prisma/client/runtime").Decimal;
        formaPagamento: string;
        dataCancelamento: Date;
        comprovante: string;
    }, unknown, never> & {}>;
    registrarPagamento(id: number, dadosPagamento: any): Promise<import("@prisma/client/runtime").GetResult<{
        id: number;
        clienteId: number;
        clienteNome: string;
        contratoId: number;
        valor: import("@prisma/client/runtime").Decimal;
        dataVencimento: Date;
        numeroParcela: number;
        descricao: string;
        nossoNumero: string;
        linhaDigitavel: string;
        codigoBarras: string;
        pdfUrl: string;
        dataGeracao: Date;
        status: string;
        dataPagamento: Date;
        valorPago: import("@prisma/client/runtime").Decimal;
        formaPagamento: string;
        dataCancelamento: Date;
        comprovante: string;
    }, unknown, never> & {}>;
    private gerarNossoNumero;
    private gerarLinhaDigitavel;
    private gerarCodigoBarras;
}
