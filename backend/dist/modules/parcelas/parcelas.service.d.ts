import { PrismaService } from '../../prisma/prisma.service';
import { CreateParcelaDto } from './dto/create-parcela.dto';
import { UpdateParcelaDto } from './dto/update-parcela.dto';
import { PagamentoParcelaDto } from './dto/pagamento-parcela.dto';
export declare class ParcelasService {
    private readonly prisma;
    constructor(prisma: PrismaService);
    create(createParcelaDto: CreateParcelaDto): Promise<import("@prisma/client/runtime").GetResult<{
        id: number;
        contratoId: number;
        numero: number;
        valor: import("@prisma/client/runtime").Decimal;
        dataVencimento: Date;
        status: string;
        dataPagamento: Date;
        valorPago: import("@prisma/client/runtime").Decimal;
        formaPagamento: string;
        observacoes: string;
        dataCriacao: Date;
        boletoId: number;
    }, unknown, never> & {}>;
    findAll(): Promise<(import("@prisma/client/runtime").GetResult<{
        id: number;
        contratoId: number;
        numero: number;
        valor: import("@prisma/client/runtime").Decimal;
        dataVencimento: Date;
        status: string;
        dataPagamento: Date;
        valorPago: import("@prisma/client/runtime").Decimal;
        formaPagamento: string;
        observacoes: string;
        dataCriacao: Date;
        boletoId: number;
    }, unknown, never> & {})[]>;
    findOne(id: number): Promise<{
        contrato: import("@prisma/client/runtime").GetResult<{
            id: number;
            clienteId: number;
            loteId: number;
            chave: string;
            numeroContrato: string;
            dataEmissao: Date;
            dataPrimeiraPrestacao: Date;
            valorPrestacao: import("@prisma/client/runtime").Decimal;
            dataInicio: Date;
            dataFim: Date;
            valorTotal: import("@prisma/client/runtime").Decimal;
            valorEntrada: import("@prisma/client/runtime").Decimal;
            numeroParcelas: number;
            dataVencimento: number;
            clausulas: string;
            status: string;
            dataCriacao: Date;
            parcelasPagas: number;
            ultimoReajuste: import(".prisma/client").Prisma.JsonValue;
        }, unknown, never> & {};
        boleto: import("@prisma/client/runtime").GetResult<{
            id: number;
            clienteId: number;
            clienteNome: string;
            contratoId: number;
            valor: import("@prisma/client/runtime").Decimal;
            dataVencimento: Date;
            numeroParcela: number;
            descricao: string;
            nossoNumero: string;
            linhaDigitavel: string;
            codigoBarras: string;
            pdfUrl: string;
            dataGeracao: Date;
            status: string;
            dataPagamento: Date;
            valorPago: import("@prisma/client/runtime").Decimal;
            formaPagamento: string;
            dataCancelamento: Date;
            comprovante: string;
            parcelaId: number;
        }, unknown, never> & {};
    } & import("@prisma/client/runtime").GetResult<{
        id: number;
        contratoId: number;
        numero: number;
        valor: import("@prisma/client/runtime").Decimal;
        dataVencimento: Date;
        status: string;
        dataPagamento: Date;
        valorPago: import("@prisma/client/runtime").Decimal;
        formaPagamento: string;
        observacoes: string;
        dataCriacao: Date;
        boletoId: number;
    }, unknown, never> & {}>;
    findByContrato(contratoId: number): Promise<({
        boleto: {
            id: number;
            nossoNumero: string;
            status: string;
            pdfUrl: string;
        };
    } & import("@prisma/client/runtime").GetResult<{
        id: number;
        contratoId: number;
        numero: number;
        valor: import("@prisma/client/runtime").Decimal;
        dataVencimento: Date;
        status: string;
        dataPagamento: Date;
        valorPago: import("@prisma/client/runtime").Decimal;
        formaPagamento: string;
        observacoes: string;
        dataCriacao: Date;
        boletoId: number;
    }, unknown, never> & {})[]>;
    gerarParcelas(contratoId: number): Promise<any[]>;
    update(id: number, updateParcelaDto: UpdateParcelaDto): Promise<import("@prisma/client/runtime").GetResult<{
        id: number;
        contratoId: number;
        numero: number;
        valor: import("@prisma/client/runtime").Decimal;
        dataVencimento: Date;
        status: string;
        dataPagamento: Date;
        valorPago: import("@prisma/client/runtime").Decimal;
        formaPagamento: string;
        observacoes: string;
        dataCriacao: Date;
        boletoId: number;
    }, unknown, never> & {}>;
    registrarPagamento(id: number, pagamentoDto: PagamentoParcelaDto): Promise<{
        contrato: import("@prisma/client/runtime").GetResult<{
            id: number;
            clienteId: number;
            loteId: number;
            chave: string;
            numeroContrato: string;
            dataEmissao: Date;
            dataPrimeiraPrestacao: Date;
            valorPrestacao: import("@prisma/client/runtime").Decimal;
            dataInicio: Date;
            dataFim: Date;
            valorTotal: import("@prisma/client/runtime").Decimal;
            valorEntrada: import("@prisma/client/runtime").Decimal;
            numeroParcelas: number;
            dataVencimento: number;
            clausulas: string;
            status: string;
            dataCriacao: Date;
            parcelasPagas: number;
            ultimoReajuste: import(".prisma/client").Prisma.JsonValue;
        }, unknown, never> & {};
        boleto: import("@prisma/client/runtime").GetResult<{
            id: number;
            clienteId: number;
            clienteNome: string;
            contratoId: number;
            valor: import("@prisma/client/runtime").Decimal;
            dataVencimento: Date;
            numeroParcela: number;
            descricao: string;
            nossoNumero: string;
            linhaDigitavel: string;
            codigoBarras: string;
            pdfUrl: string;
            dataGeracao: Date;
            status: string;
            dataPagamento: Date;
            valorPago: import("@prisma/client/runtime").Decimal;
            formaPagamento: string;
            dataCancelamento: Date;
            comprovante: string;
            parcelaId: number;
        }, unknown, never> & {};
    } & import("@prisma/client/runtime").GetResult<{
        id: number;
        contratoId: number;
        numero: number;
        valor: import("@prisma/client/runtime").Decimal;
        dataVencimento: Date;
        status: string;
        dataPagamento: Date;
        valorPago: import("@prisma/client/runtime").Decimal;
        formaPagamento: string;
        observacoes: string;
        dataCriacao: Date;
        boletoId: number;
    }, unknown, never> & {}>;
    remove(id: number): Promise<import("@prisma/client/runtime").GetResult<{
        id: number;
        contratoId: number;
        numero: number;
        valor: import("@prisma/client/runtime").Decimal;
        dataVencimento: Date;
        status: string;
        dataPagamento: Date;
        valorPago: import("@prisma/client/runtime").Decimal;
        formaPagamento: string;
        observacoes: string;
        dataCriacao: Date;
        boletoId: number;
    }, unknown, never> & {}>;
}
